/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SolicyCoinERC20,
  SolicyCoinERC20Interface,
} from "../../../contracts/Erc20.sol/SolicyCoinERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "__fee",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "delFromBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "fee",
        type: "uint8",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020ed380380620020ed83398181016040528101906200003791906200039b565b6040518060400160405280600681526020017f536f6c69637900000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f534f4c00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002d4565b508060049080519060200190620000d4929190620002d4565b50505033600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548160ff021916908360ff1602179055506200014a336402540be4006200015160201b60201c565b506200059a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001bb90620003ff565b60405180910390fd5b620001d860008383620002ca60201b60201c565b8060026000828254620001ec91906200044f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200024391906200044f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002aa919062000421565b60405180910390a3620002c660008383620002cf60201b60201c565b5050565b505050565b505050565b828054620002e290620004c3565b90600052602060002090601f01602090048101928262000306576000855562000352565b82601f106200032157805160ff191683800117855562000352565b8280016001018555821562000352579182015b828111156200035157825182559160200191906001019062000334565b5b50905062000361919062000365565b5090565b5b808211156200038057600081600090555060010162000366565b5090565b600081519050620003958162000580565b92915050565b600060208284031215620003ae57600080fd5b6000620003be8482850162000384565b91505092915050565b6000620003d6601f836200043e565b9150620003e38262000557565b602082019050919050565b620003f981620004ac565b82525050565b600060208201905081810360008301526200041a81620003c7565b9050919050565b6000602082019050620004386000830184620003ee565b92915050565b600082825260208201905092915050565b60006200045c82620004ac565b91506200046983620004ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004a157620004a0620004f9565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b60006002820490506001821680620004dc57607f821691505b60208210811415620004f357620004f262000528565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200058b81620004b6565b81146200059757600080fd5b50565b611b4380620005aa6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a457c2d711610071578063a457c2d7146102cf578063a9059cbb146102ff578063cb122a091461032f578063ced72f871461034b578063dd62ed3e1461036957610116565b80638da5cb5b1461025b57806395d89b41146102795780639dc29fac14610297578063a35a319b146102b357610116565b806323b872dd116100e957806323b872dd14610191578063313ce567146101c157806339509351146101df578063417c73a71461020f57806370a082311461022b57610116565b806306fdde031461011b578063095ea7b3146101395780631249c58b1461016957806318160ddd14610173575b600080fd5b610123610399565b60405161013091906113dc565b60405180910390f35b610153600480360381019061014e919061114b565b61042b565b60405161016091906113c1565b60405180910390f35b61017161044e565b005b61017b610491565b604051610188919061155e565b60405180910390f35b6101ab60048036038101906101a691906110fc565b61049b565b6040516101b891906113c1565b60405180910390f35b6101c96105b6565b6040516101d69190611579565b60405180910390f35b6101f960048036038101906101f4919061114b565b6105bf565b60405161020691906113c1565b60405180910390f35b61022960048036038101906102249190611097565b6105f6565b005b61024560048036038101906102409190611097565b610651565b604051610252919061155e565b60405180910390f35b610263610699565b60405161027091906113a6565b60405180910390f35b6102816106bf565b60405161028e91906113dc565b60405180910390f35b6102b160048036038101906102ac919061114b565b610751565b005b6102cd60048036038101906102c89190611097565b610799565b005b6102e960048036038101906102e4919061114b565b6107eb565b6040516102f691906113c1565b60405180910390f35b6103196004803603810190610314919061114b565b610862565b60405161032691906113c1565b60405180910390f35b61034960048036038101906103449190611187565b61090d565b005b610353610985565b6040516103609190611579565b60405180910390f35b610383600480360381019061037e91906110c0565b61099c565b604051610390919061155e565b60405180910390f35b6060600380546103a8906116c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906116c2565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b600080610436610a23565b9050610443818585610a2b565b600191505092915050565b600061048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104869061151e565b60405180910390fd5b565b6000600254905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561052a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610521906114de565b60405180910390fd5b610535848484610bf6565b600061054885610543610a23565b61099c565b90508281101561058d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105849061147e565b60405180910390fd5b6105aa85610599610a23565b85846105a59190611606565b610a2b565b60019150509392505050565b60006012905090565b6000806105ca610a23565b90506105eb8185856105dc858961099c565b6105e691906115b0565b610a2b565b600191505092915050565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546106ce906116c2565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa906116c2565b80156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078a57600080fd5b6107948383610e77565b505050565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b6000806107f6610a23565b90506000610804828661099c565b905083811015610849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108409061153e565b60405180910390fd5b6108568286868403610a2b565b60019250505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e8906114de565b60405180910390fd5b6109036108fc610a23565b8484610bf6565b6001905092915050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096757600080fd5b80600660006101000a81548160ff021916908360ff16021790555050565b6000600660009054906101000a900460ff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906114fe565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061143e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610be9919061155e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5d906114be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd906113fe565b60405180910390fd5b610ce183838361104e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e9061145e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dfa91906115b0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5e919061155e565b60405180910390a3610e71848484611053565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ee7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ede9061149e565b60405180910390fd5b610ef38260008361104e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f709061141e565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610fd09190611606565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611035919061155e565b60405180910390a361104983600084611053565b505050565b505050565b505050565b60008135905061106781611ac8565b92915050565b60008135905061107c81611adf565b92915050565b60008135905061109181611af6565b92915050565b6000602082840312156110a957600080fd5b60006110b784828501611058565b91505092915050565b600080604083850312156110d357600080fd5b60006110e185828601611058565b92505060206110f285828601611058565b9150509250929050565b60008060006060848603121561111157600080fd5b600061111f86828701611058565b935050602061113086828701611058565b92505060406111418682870161106d565b9150509250925092565b6000806040838503121561115e57600080fd5b600061116c85828601611058565b925050602061117d8582860161106d565b9150509250929050565b60006020828403121561119957600080fd5b60006111a784828501611082565b91505092915050565b6111b98161163a565b82525050565b6111c88161164c565b82525050565b60006111d982611594565b6111e3818561159f565b93506111f381856020860161168f565b6111fc81611752565b840191505092915050565b600061121460238361159f565b915061121f82611763565b604082019050919050565b600061123760228361159f565b9150611242826117b2565b604082019050919050565b600061125a60228361159f565b915061126582611801565b604082019050919050565b600061127d60268361159f565b915061128882611850565b604082019050919050565b60006112a060288361159f565b91506112ab8261189f565b604082019050919050565b60006112c360218361159f565b91506112ce826118ee565b604082019050919050565b60006112e660258361159f565b91506112f18261193d565b604082019050919050565b600061130960318361159f565b91506113148261198c565b604082019050919050565b600061132c60248361159f565b9150611337826119db565b604082019050919050565b600061134f60248361159f565b915061135a82611a2a565b604082019050919050565b600061137260258361159f565b915061137d82611a79565b604082019050919050565b61139181611678565b82525050565b6113a081611682565b82525050565b60006020820190506113bb60008301846111b0565b92915050565b60006020820190506113d660008301846111bf565b92915050565b600060208201905081810360008301526113f681846111ce565b905092915050565b6000602082019050818103600083015261141781611207565b9050919050565b600060208201905081810360008301526114378161122a565b9050919050565b600060208201905081810360008301526114578161124d565b9050919050565b6000602082019050818103600083015261147781611270565b9050919050565b6000602082019050818103600083015261149781611293565b9050919050565b600060208201905081810360008301526114b7816112b6565b9050919050565b600060208201905081810360008301526114d7816112d9565b9050919050565b600060208201905081810360008301526114f7816112fc565b9050919050565b600060208201905081810360008301526115178161131f565b9050919050565b6000602082019050818103600083015261153781611342565b9050919050565b6000602082019050818103600083015261155781611365565b9050919050565b60006020820190506115736000830184611388565b92915050565b600060208201905061158e6000830184611397565b92915050565b600081519050919050565b600082825260208201905092915050565b60006115bb82611678565b91506115c683611678565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115fb576115fa6116f4565b5b828201905092915050565b600061161182611678565b915061161c83611678565b92508282101561162f5761162e6116f4565b5b828203905092915050565b600061164582611658565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156116ad578082015181840152602081019050611692565b838111156116bc576000848401525b50505050565b600060028204905060018216806116da57607f821691505b602082108114156116ee576116ed611723565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f546865206164647265737320796f752061726520747279696e6720746f20747260008201527f616e7366657220697320626c6f636b6564000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4d696e7420616374696f6e20626c6f636b656420696e207468697320636f6e7460008201527f7261637400000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b611ad18161163a565b8114611adc57600080fd5b50565b611ae881611678565b8114611af357600080fd5b50565b611aff81611682565b8114611b0a57600080fd5b5056fea2646970667358221220361cca64c7b03ef7b722021e3a99a3f265a87b122617884eb5d19d701e212f7064736f6c63430008010033";

type SolicyCoinERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SolicyCoinERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SolicyCoinERC20__factory extends ContractFactory {
  constructor(...args: SolicyCoinERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SolicyCoinERC20> {
    return super.deploy(__fee, overrides || {}) as Promise<SolicyCoinERC20>;
  }
  override getDeployTransaction(
    __fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(__fee, overrides || {});
  }
  override attach(address: string): SolicyCoinERC20 {
    return super.attach(address) as SolicyCoinERC20;
  }
  override connect(signer: Signer): SolicyCoinERC20__factory {
    return super.connect(signer) as SolicyCoinERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolicyCoinERC20Interface {
    return new utils.Interface(_abi) as SolicyCoinERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolicyCoinERC20 {
    return new Contract(address, _abi, signerOrProvider) as SolicyCoinERC20;
  }
}
